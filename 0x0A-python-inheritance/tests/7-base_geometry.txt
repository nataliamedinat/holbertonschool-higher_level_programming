======================
Using ``7-base_geometry``
-------------------
Integer validation in a class "BaseGeometry"

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
Tests
---------------------------------------------------------------
Area:
    >>> bgeo =BaseGeometry()
    >>> print(bgeo.area())
        Traceback (most recent call last):
        Exception: area() is not implemented
Negative Value:
    >>> bgeo.integer_validator("width", -7)
        Traceback (most recent call last):
        ValueError: width must be greater than 0

Missing one argument:
    >>> bgeo.integer_validator("age", )
        Traceback (most recent call last):
        TypeError: integer_validator() missing 1 required positional argument: 'value'

Value is 0:
    >>> bgeo.integer_validator("age", 0"
        Traceback (most recent call last):
        ValueError: age must be greater than 0

With no arguments:
    >>> bgeo.integer_validator()
        Traceback (most recent call last):
        TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

One argument:
    >>> bgeo.integer_validator(, 7)
       Traceback (most recent call last):
       SyntaxError: invalid syntax

Multiple arguments:
    >>> bgeo.integer_validator("hi", 7, 3)
        Traceback (most recent call last):
        TypeError: integer_validator() takes 3 positional arguments but 4 were given
